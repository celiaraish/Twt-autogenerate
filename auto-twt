from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from faker import Faker
import random
import logging

fake = Faker()

chrome_options = Options()
chrome_options.add_argument("--incognito")
chrome_options.add_argument("--start-maximized")
chrome_options.add_argument("--disable-blink-features=AutomationControlled")
chrome_options.add_argument("--disable-infobars")
chrome_options.add_argument("--disable-extensions")
chrome_options.add_argument("--disable-gpu")
chrome_options.add_argument("--no-sandbox")

logging.basicConfig(level=logging.INFO, format='%(asctime)s %(levelname)s:%(message)s')

def wait_for_element(driver, by, value, timeout=20):
    return WebDriverWait(driver, timeout).until(EC.presence_of_element_located((by, value)))

def main():
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=chrome_options)
    try:
        logging.info("Opening Twitter signup page...")
        driver.get("https://twitter.com/i/flow/signup")
        wait_for_element(driver, By.TAG_NAME, "body")
        
        # Generate fake user data
        first_name = fake.first_name()
        last_name = fake.last_name()
        random_number = random.randint(100, 999)
        full_name = f"{first_name} {last_name}{random_number}"
        email = f"{first_name.lower()}{last_name.lower()}{random_number}@citayam.com"
        months = [
            "January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"
        ]
        birth_month = random.choice(months)
        birth_day = random.randint(1, 28)
        birth_year = random.randint(1994, 2000)

        logging.info(f"Filling signup form: Name={full_name}, Email={email}, DOB={birth_day}-{birth_month}-{birth_year}")
        
        wait_for_element(driver, By.NAME, "name").send_keys(full_name)

        # Try to switch to email input if needed
        try:
            email_btn = driver.find_element(By.XPATH, '//span[text()="Use email instead"]')
            email_btn.click()
            logging.info("Switched to email input.")
        except Exception:
            logging.info("Email input already active or button not found.")

        wait_for_element(driver, By.NAME, "email").send_keys(email)
        wait_for_element(driver, By.ID, "SELECTOR_1").send_keys(str(birth_month))
        wait_for_element(driver, By.ID, "SELECTOR_2").send_keys(str(birth_day))
        wait_for_element(driver, By.ID, "SELECTOR_3").send_keys(str(birth_year))

        logging.info("Form data filled.")

        next_btn = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.XPATH, '//span[text()="Next"]'))
        )
        next_btn.click()
        logging.info("Clicked Next button.")

        # Wait for manual intervention if captcha/human verification appears
        input("Check the browser. Press ENTER here to close when done.")

    except Exception as e:
        logging.error(f"Error: {e}")
        driver.save_screenshot("error_screenshot.png")
        logging.info("Saved screenshot as error_screenshot.png")
    finally:
        driver.quit()
        logging.info("Closed browser.")

if __name__ == "__main__":
    main()
